generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id               String            @id @default(uuid())
  nome             String
  sobrenome        String
  cpf              String            @unique
  email            String            @unique
  senha            String
  instituicao      String
  tipo             String
  ativo            Boolean           @default(true)
  criadoEm         DateTime          @default(now())
  atualizadoEm     DateTime          @updatedAt
  estabelecimentos Estabelecimento[]
  redefinirSenhas  RedefinirSenha[]
  convites         Convite[]
}

model Convite {
  id          String   @id @default(uuid())
  token       String   @unique
  idCriador   String
  email       String
  instituicao String
  tipo        String
  criadoEm    DateTime @default(now())
  expiraEm    DateTime
  usado       Boolean  @default(false)

  criador Usuario @relation(fields: [idCriador], references: [id])
}

model RedefinirSenha {
  id        String   @id @default(uuid())
  token     String   @unique
  idUsuario String
  expiraEm  DateTime
  usado     Boolean  @default(false)
  criadoEm  DateTime @default(now())

  usuario Usuario @relation(fields: [idUsuario], references: [id])
}

model Estabelecimento {
  id                            String   @id @default(uuid())
  nome                          String
  cnpj                          String   @unique
  cnae                          String
  endereco                      String
  cidade                        String
  estado                        String
  pessoalOcupado                Int
  numeroRefeicoes               Int
  possuiAlvaraSanitario         Int
  possuiResponsavelBoasPraticas Int
  alteradoPor                   String
  ativo                         Boolean  @default(true)
  alteradoEm                    DateTime @updatedAt

  usuario    Usuario     @relation(fields: [alteradoPor], references: [id])
  avaliacoes Avaliacao[]
  Resultado  Resultado[]
}

model Gestores {
  id          String    @id @default(uuid())
  idAvaliacao String
  criadoEm    DateTime  @default(now()) @db.Timestamptz(3)
  alteradoEm  DateTime  @updatedAt @db.Timestamptz(3)
  informacoes String    @db.Text
  ativo       Boolean   @default(true)
  avaliacao   Avaliacao @relation(fields: [idAvaliacao], references: [id])
}

model ManipuladorAlimento {
  id          String    @id @default(uuid())
  idAvaliacao String
  criadoEm    DateTime  @default(now()) @db.Timestamptz(3)
  alteradoEm  DateTime  @updatedAt @db.Timestamptz(3)
  informacoes String    @db.Text
  ativo       Boolean   @default(true)
  avaliacao   Avaliacao @relation(fields: [idAvaliacao], references: [id])

  analiseQuantitativa AnaliseQuantitativa[]
}

model ListaVerificacao {
  id          String    @id @default(uuid())
  informacoes String    @db.Text
  idAvaliacao String
  ativo       Boolean   @default(true)
  criadoEm    DateTime  @default(now()) @db.Timestamptz(3)
  alteradoEm  DateTime  @updatedAt @db.Timestamptz(3)
  avaliacao   Avaliacao @relation(fields: [idAvaliacao], references: [id])
}

model AnaliseQualitativa {
  id          String    @id @default(uuid())
  idAvaliacao String
  informacoes String    @db.Text
  criadoEm    DateTime  @default(now()) @db.Timestamptz(3)
  alteradoEm  DateTime  @updatedAt @db.Timestamptz(3)
  avaliacao   Avaliacao @relation(fields: [idAvaliacao], references: [id])
  ativo       Boolean   @default(true)
}

model Triangulacao {
  id          String   @id @default(uuid())
  idAvaliacao String
  informacoes String   @db.Text
  criadoEm    DateTime @default(now()) @db.Timestamptz(3)
  alteradoEm  DateTime @updatedAt @db.Timestamptz(3)

  resultado Resultado[]
  avaliacao Avaliacao   @relation(fields: [idAvaliacao], references: [id])
}

model Resultado {
  id                String          @id @default(uuid())
  idEstabelecimento String
  idTriangulacao    String
  idAvaliacao       String
  informacoes       String          @db.Text
  triangulacao      Triangulacao    @relation(fields: [idTriangulacao], references: [id])
  estabelecimento   Estabelecimento @relation(fields: [idEstabelecimento], references: [id])
  avaliacao         Avaliacao       @relation(fields: [idAvaliacao], references: [id])
}

model AnaliseQuantitativa {
  id                                  String               @id @default(uuid())
  idAvaliacao                         String
  caracteristicasSocioDemograficas    String               @db.Text
  resultadosAvaliacaoQuantitativasCsa String               @db.Text
  viesOtimista                        String               @db.Text
  criadoEm                            DateTime             @default(now()) @db.Timestamptz(3)
  alteradoEm                          DateTime             @updatedAt @db.Timestamptz(3)
  ativo                               Int                  @default(1)
  avaliacao                           Avaliacao            @relation(fields: [idAvaliacao], references: [id])
  manipuladorAlimento                 ManipuladorAlimento? @relation(fields: [manipuladorAlimentoId], references: [id])
  manipuladorAlimentoId               String?
}

model Avaliacao {
  id                  String                @id @default(uuid())
  idEstabelecimento   String
  criadoEm            DateTime              @default(now()) @db.Timestamptz(3)
  alteradoEm          DateTime              @updatedAt @db.Timestamptz(3)
  ativo               Boolean               @default(true)
  estabelecimento     Estabelecimento       @relation(fields: [idEstabelecimento], references: [id])
  gestores            Gestores[]
  analiseQuantitativa AnaliseQuantitativa[]
  manipuladorAlimento ManipuladorAlimento[]
  listaVerificacao    ListaVerificacao[]
  analiseQualitativa  AnaliseQualitativa[]
  triangulacao        Triangulacao[]
  resultado           Resultado[]
}
